Index: src/x86/filmgrain16_sse.asm
--- src/x86/filmgrain16_sse.asm.orig
+++ src/x86/filmgrain16_sse.asm
@@ -185,6 +185,7 @@ cglobal generate_grain_y_16bpc, 3, 6, 8, buf, fg_data,
     jmp              r3
 
 .ar1:
+    _CET_ENDBR
 %if WIN64
     DEFINE_ARGS shift, fg_data, max, buf, val3, min, cf3, x, val0
     lea            bufq, [r0-2*(82*73-(82*3+79))]
@@ -271,9 +272,11 @@ cglobal generate_grain_y_16bpc, 3, 6, 8, buf, fg_data,
 %undef hd
 %endif
 .ar0:
+    _CET_ENDBR
     RET
 
 .ar2:
+    _CET_ENDBR
 %if ARCH_X86_32
 %assign stack_offset_old stack_offset
     ALLOC_STACK -16*8
@@ -419,6 +422,7 @@ cglobal generate_grain_y_16bpc, 3, 6, 8, buf, fg_data,
     RET
 
 .ar3:
+    _CET_ENDBR
     DEFINE_ARGS buf, fg_data, bdmax, shift
 %if WIN64
     mov              r6, rsp
@@ -711,6 +715,7 @@ cglobal generate_grain_uv_%1_16bpc, 1, 7, 8, buf, x, p
     jmp              r5
 
 .ar0:
+    _CET_ENDBR
 %if ARCH_X86_64
     DEFINE_ARGS buf, bufy, fg_data, uv, bdmax, shift
 %else
@@ -828,6 +833,7 @@ cglobal generate_grain_uv_%1_16bpc, 1, 7, 8, buf, x, p
     RET
 
 .ar1:
+    _CET_ENDBR
 %if ARCH_X86_64
     DEFINE_ARGS buf, bufy, fg_data, uv, max, cf3, min, val3, x
 %else
@@ -958,6 +964,7 @@ cglobal generate_grain_uv_%1_16bpc, 1, 7, 8, buf, x, p
     RET
 
 .ar2:
+    _CET_ENDBR
 %if ARCH_X86_64
     DEFINE_ARGS buf, bufy, fg_data, uv, bdmax, shift
 %else
@@ -1147,6 +1154,7 @@ cglobal generate_grain_uv_%1_16bpc, 1, 7, 8, buf, x, p
     RET
 
 .ar3:
+    _CET_ENDBR
 %if ARCH_X86_64
     DEFINE_ARGS buf, bufy, fg_data, uv, bdmax, shift
 %if WIN64
