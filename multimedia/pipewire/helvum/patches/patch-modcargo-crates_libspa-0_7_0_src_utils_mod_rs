From d70d83d7afc601eb3ef244379846e0d5f46dd0e5 Mon Sep 17 00:00:00 2001
From: Mike Rostecki <vadorovsky@protonmail.com>
Date: Tue, 22 Aug 2023 00:02:06 +0200
Subject: [PATCH] libspa: Fix the bingen type name

Index: modcargo-crates/libspa-0.7.0/src/utils/mod.rs
--- modcargo-crates/libspa-0.7.0/src/utils/mod.rs.orig
+++ modcargo-crates/libspa-0.7.0/src/utils/mod.rs
@@ -2,7 +2,7 @@
 
 use bitflags::bitflags;
 use convert_case::{Case, Casing};
-use std::{ffi::CStr, fmt::Debug};
+use std::{ffi::CStr, fmt::Debug, os::raw::c_uint};
 
 pub use spa_sys::spa_fraction as Fraction;
 pub use spa_sys::spa_rectangle as Rectangle;
@@ -74,7 +74,7 @@ pub enum ChoiceEnum<T: CanonicalFixedSizedPod> {
 }
 
 #[derive(Copy, Clone, PartialEq, Eq)]
-pub struct SpaTypes(pub spa_sys::_bindgen_ty_10);
+pub struct SpaTypes(pub c_uint);
 
 #[allow(non_upper_case_globals)]
 impl SpaTypes {
@@ -132,13 +132,13 @@ impl SpaTypes {
 
     pub const VendorOther: Self = Self(spa_sys::SPA_TYPE_VENDOR_Other);
 
-    /// Obtain a [`SpaTypes`] from a raw `_bindgen_ty_10` variant.
-    pub fn from_raw(raw: spa_sys::_bindgen_ty_10) -> Self {
+    /// Obtain a [`SpaTypes`] from a raw `c_uint` variant.
+    pub fn from_raw(raw: c_uint) -> Self {
         Self(raw)
     }
 
-    /// Get the raw [`spa_sys::_bindgen_ty_10`] representing this `SpaTypes`.
-    pub fn as_raw(&self) -> spa_sys::_bindgen_ty_10 {
+    /// Get the raw [`c_uint`](std::os::raw::c_uint) representing this `SpaTypes`.
+    pub fn as_raw(&self) -> c_uint {
         self.0
     }
 }
