https://github.com/seanmonstar/reqwest/commit/e0f7787a2eb0cdf40a7d437021461397bcce0e73.patch
Index: modcargo-crates/reqwest-0.11.11/src/redirect.rs
--- modcargo-crates/reqwest-0.11.11/src/redirect.rs.orig
+++ modcargo-crates/reqwest-0.11.11/src/redirect.rs
@@ -174,13 +174,22 @@ impl<'a> Attempt<'a> {
     pub fn previous(&self) -> &[Url] {
         self.previous
     }
+
     /// Returns an action meaning reqwest should follow the next URL.
     pub fn follow(self) -> Action {
         Action {
-            inner: ActionKind::Follow,
+            inner: ActionKind::Follow(false),
         }
     }
 
+    /// Returns an action meaning reqwest should follow the next URL,
+    /// including sensitive headers such as Authorization and Cookies.
+    pub fn follow_trusted(self) -> Action {
+        Action {
+            inner: ActionKind::Follow(true),
+        }
+    }
+
     /// Returns an action meaning reqwest should not follow the next URL.
     ///
     /// The 30x response will be returned as the `Ok` result.
@@ -226,7 +235,7 @@ impl fmt::Debug for PolicyKind {
 
 #[derive(Debug)]
 pub(crate) enum ActionKind {
-    Follow,
+    Follow(bool),
     Stop,
     Error(Box<dyn StdError + Send + Sync>),
 }
@@ -265,7 +274,7 @@ fn test_redirect_policy_limit() {
         .collect::<Vec<_>>();
 
     match policy.check(StatusCode::FOUND, &next, &previous) {
-        ActionKind::Follow => (),
+        ActionKind::Follow(false) => (),
         other => panic!("unexpected {:?}", other),
     }
 
@@ -289,7 +298,7 @@ fn test_redirect_policy_custom() {
 
     let next = Url::parse("http://bar/baz").unwrap();
     match policy.check(StatusCode::FOUND, &next, &[]) {
-        ActionKind::Follow => (),
+        ActionKind::Follow(false) => (),
         other => panic!("unexpected {:?}", other),
     }
 
