Use ${MODPY_VERSION} to pick up the correct python .pc file
Use ${LOCALBASE} instead of hard-coded /usr/local

Index: configure.ac
--- configure.ac.orig
+++ configure.ac
@@ -104,7 +104,7 @@ elif test "x$enable_python_plugins" != xno; then
         rm -f Python.framework
         ln -s $PYTHON_FRAMEWORK Python.framework ])
     PKG_CHECK_MODULES([python], [python-embed], [PYTHON_CONFIG_EXISTS=yes], [PYTHON_CONFIG_EXISTS=no])
-    PKG_CHECK_MODULES([python], [python3-embed], [PYTHON3_CONFIG_EXISTS=yes; AC_DEFINE(PY_IS_PYTHON3, [1], [Is Python version 3])], [PYTHON3_CONFIG_EXISTS=no])
+    PKG_CHECK_MODULES([python], [python-${MODPY_VERSION}-embed], [PYTHON3_CONFIG_EXISTS=yes; AC_DEFINE(PY_IS_PYTHON3, [1], [Is Python version 3])], [PYTHON3_CONFIG_EXISTS=no])
     if test "$PYTHON_CONFIG_EXISTS" = "yes" || test "$PYTHON3_CONFIG_EXISTS" = "yes"; then
         AM_CONDITIONAL([BUILD_PYTHON_API], [true])
         AC_DEFINE([HAVE_PYTHON], [1], [Python support])
@@ -223,10 +223,10 @@ AS_IF([test "x$PLATFORM" = xosx],
         [AC_MSG_ERROR([libreadline is required for profanity. Install it with Homebrew, MacPorts, or manually into /usr/local])])],
 
       [test "x$PLATFORM" = xopenbsd],
-      [AC_CHECK_FILE([/usr/local/include/ereadline],
+      [AC_CHECK_FILE([${LOCALBASE}/include/ereadline],
           [LIBS="-lereadline $LIBS"
-              AM_CPPFLAGS="-I/usr/local/include/ereadline $AM_CFLAGS"
-              AM_LDFLAGS="-L/usr/local/lib $AM_LDFLAGS"
+              AM_CPPFLAGS="-I${LOCALBASE}/include/ereadline $AM_CFLAGS"
+              AM_LDFLAGS="-L${LOCALBASE}/lib $AM_LDFLAGS"
               AC_SUBST(AM_LDFLAGS)])],
 
     [AC_CHECK_LIB([readline], [main], [],
