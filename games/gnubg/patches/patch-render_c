We make GNU Backgammon use system-supplied DejaVu fonts instead of bundling Vera
fonts.  Thus stop building dynamically allocated paths for fonts.

Index: render.c
--- render.c.orig
+++ render.c
@@ -52,14 +52,6 @@
 static randctx rc;
 #define RAND irand( &rc )
 
-#if defined(HAVE_FREETYPE)
-#define FONT_VERA "fonts/Vera.ttf"
-#define FONT_VERA_SERIF_BOLD "fonts/VeraSeBd.ttf"
-#if 0 /* unused for now */
-#define FONT_VERA_BOLD "fonts/VeraBd.ttf"
-#endif
-#endif
-
 /* aaanPositions[Clockwise][x][point number][x, y. deltay] */
 int positions[2][30][3] = { {
                              {BAR_X, BAR_Y_1, -CHEQUER_HEIGHT}, /* bar - player 1 */
@@ -1487,13 +1479,10 @@ RenderLabels(renderdata * prd, unsigned char *puch, in
     FT_Glyph aftg[10];
     char *file;
 
-    file = BuildFilename(FONT_VERA);
-    if (FT_New_Face(ftl, file, 0, &ftf)) {
+    if (FT_New_Face(ftl, FONT_VERA, 0, &ftf)) {
         RenderBasicLabels(prd, puch, nStride, iStart, iEnd, iDelta);
-        g_free(file);
         return;
     }
-    g_free(file);
 
     if (FT_Set_Pixel_Sizes(ftf, 0, prd->nSize * 5 / 2)) {
         RenderBasicLabels(prd, puch, nStride, iStart, iEnd, iDelta);
@@ -1773,10 +1762,8 @@ RenderChequerLabels(renderdata * prd, unsigned char *p
     FT_Face ftf;
     FT_Glyph aftg[10];
     int fFreetype = FALSE;
-    char *file;
 
-    file = BuildFilename(FONT_VERA);
-    if (!FT_New_Face(ftl, file, 0, &ftf) && !FT_Set_Pixel_Sizes(ftf, 0, 2 * prd->nSize)) {
+    if (!FT_New_Face(ftl, FONT_VERA, 0, &ftf) && !FT_Set_Pixel_Sizes(ftf, 0, 2 * prd->nSize)) {
         fFreetype = TRUE;
         for (i = 0; i < 10; i++) {
             FT_Load_Char(ftf, '0' + i, FT_LOAD_RENDER);
@@ -1785,7 +1772,6 @@ RenderChequerLabels(renderdata * prd, unsigned char *p
 
         FT_Done_Face(ftf);
     }
-    g_free(file);
 #endif
 
     for (i = 0; i < 12; i++) {
@@ -1942,10 +1928,8 @@ RenderCubeFaces(renderdata * prd, unsigned char *puch,
     FT_Face ftf;
     FT_Glyph aftg[10], aftgSmall[10], aftgTiny[10];
     int fFreetype = FALSE;
-    char *file;
 
-    file = BuildFilename(FONT_VERA_SERIF_BOLD);
-    if (!FT_New_Face(ftl, file, 0, &ftf) && !FT_Set_Pixel_Sizes(ftf, 0, 3 * prd->nSize)) {
+    if (!FT_New_Face(ftl, FONT_VERA_SERIF_BOLD, 0, &ftf) && !FT_Set_Pixel_Sizes(ftf, 0, 3 * prd->nSize)) {
         fFreetype = TRUE;
 
         for (i = 0; i < 10; i++) {
@@ -1969,7 +1953,6 @@ RenderCubeFaces(renderdata * prd, unsigned char *puch,
 
         FT_Done_Face(ftf);
     }
-    g_free(file);
 #endif
 
     for (i = 0; i < 6; i++) {
@@ -2045,10 +2028,8 @@ RenderResignFaces(renderdata * prd, unsigned char *puc
     FT_Face ftf;
     FT_Glyph aftg[10], aftgSmall[10];
     int fFreetype = FALSE;
-    char *file;
 
-    file = BuildFilename(FONT_VERA_SERIF_BOLD);
-    if (!FT_New_Face(ftl, file, 0, &ftf) && !FT_Set_Pixel_Sizes(ftf, 0, 4 * prd->nSize)) {
+    if (!FT_New_Face(ftl, FONT_VERA_SERIF_BOLD, 0, &ftf) && !FT_Set_Pixel_Sizes(ftf, 0, 4 * prd->nSize)) {
         fFreetype = TRUE;
 
         for (i = 0; i < 10; i++) {
@@ -2065,7 +2046,6 @@ RenderResignFaces(renderdata * prd, unsigned char *puc
 
         FT_Done_Face(ftf);
     }
-    g_free(file);
 #endif
 
     for (i = 0; i < 3; i++) {
