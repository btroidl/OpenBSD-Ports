Index: external/skia/openbsd.patch.2
--- external/skia/openbsd.patch.2.orig
+++ external/skia/openbsd.patch.2
@@ -0,0 +1,33 @@
+Index: third_party/skia/src/base/SkContainers.cpp
+--- third_party/skia/src/base/SkContainers.cpp.orig
++++ third_party/skia/src/base/SkContainers.cpp
+@@ -14,7 +14,7 @@
+ 
+ #if defined(SK_BUILD_FOR_MAC) || defined(SK_BUILD_FOR_IOS)
+ #include <malloc/malloc.h>
+-#elif defined(SK_BUILD_FOR_ANDROID) || defined(SK_BUILD_FOR_UNIX)
++#elif defined(SK_BUILD_FOR_ANDROID) || defined(SK_BUILD_FOR_UNIX) && !defined(__OpenBSD__)
+ #include <malloc.h>
+ #elif defined(SK_BUILD_FOR_WIN)
+ #include <malloc.h>
+@@ -38,7 +38,7 @@ SkSpan<std::byte> complete_size(void* ptr, size_t size
+     #elif defined(SK_BUILD_FOR_ANDROID) && __ANDROID_API__ >= 17
+         completeSize = malloc_usable_size(ptr);
+         SkASSERT(completeSize >= size);
+-    #elif defined(SK_BUILD_FOR_UNIX)
++    #elif defined(SK_BUILD_FOR_UNIX) && !defined(__OpenBSD__)
+         completeSize = malloc_usable_size(ptr);
+         SkASSERT(completeSize >= size);
+     #elif defined(SK_BUILD_FOR_WIN)
+Index: third_party/skia/src/ports/SkOSFile_posix.cpp
+--- third_party/skia/src/ports/SkOSFile_posix.cpp.orig
++++ third_party/skia/src/ports/SkOSFile_posix.cpp
+@@ -25,7 +25,7 @@
+ #endif
+ 
+ void sk_fsync(FILE* f) {
+-#if !defined(SK_BUILD_FOR_ANDROID) && !defined(__UCLIBC__) && !defined(_NEWLIB_VERSION)
++#if !defined(SK_BUILD_FOR_ANDROID) && !defined(__UCLIBC__) && !defined(_NEWLIB_VERSION) && !defined(__OpenBSD__)
+     int fd = fileno(f);
+     fsync(fd);
+ #endif
