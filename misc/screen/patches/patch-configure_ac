Do not rm -f /tmp/conftest*.  This kills configure tests of other builds
that happen to run at the same time.

Index: configure.ac
--- configure.ac.orig
+++ configure.ac
@@ -22,7 +22,7 @@ _CUT_HERE_
 EOF
 eval "$ac_cpp conftest.c 2>&5 | sed -e '1,/_CUT_HERE_/d' -e 's/ //g' > conftest.out"
 . ./conftest.out
-rm -f conftest*
+rm -f conftest.out
 ])dnl
 dnl
 define(AC_NOTE,
@@ -385,7 +385,7 @@ int main()
 ], AC_NOTE(- your fifos are usable) fifo=1,
 AC_NOTE(- your fifos are not usable),
 AC_NOTE(- skipping check because we are cross compiling; assuming fifos are usable) fifo=1)
-rm -f /tmp/conftest*
+rm -f /tmp/conftest$$
 
 if test -n "$fifo"; then
 AC_CHECKING(for broken fifo implementation)
@@ -436,7 +436,7 @@ main()
 ], AC_NOTE(- your implementation is ok), 
 AC_NOTE(- you have a broken implementation) AC_DEFINE(BROKEN_PIPE) fifobr=1,
 AC_NOTE(- skipping check because we are cross compiling; assuming fifo implementation is ok))
-rm -f /tmp/conftest*
+rm -f /tmp/conftest$$
 fi
 
 dnl
@@ -503,7 +503,7 @@ main()
 ], AC_NOTE(- your sockets are usable) sock=1,
 AC_NOTE(- your sockets are not usable),
 AC_NOTE(- skipping check because we are cross compiling; assuming sockets are usable) sock=1)
-rm -f /tmp/conftest*
+rm -f /tmp/conftest$$
 
 if test -n "$sock"; then
 AC_CHECKING(socket implementation)
@@ -546,7 +546,7 @@ main()
 AC_NOTE(- unix domain sockets are not kept in the filesystem)
 AC_DEFINE(SOCK_NOT_IN_FS) socknofs=1,
 AC_NOTE(- skipping check because we are cross compiling; assuming sockets are normal))
-rm -f /tmp/conftest*
+rm -f /tmp/conftest$$
 fi
 
 
