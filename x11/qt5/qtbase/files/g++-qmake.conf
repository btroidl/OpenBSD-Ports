#
# qmake configuration for openbsd-g++
# Based on freebsd-g++

MAKEFILE_GENERATOR      = UNIX
QMAKE_PLATFORM          = openbsd

include(../common/bsd/bsd.conf)

LOCALBASE               = $$(LOCALBASE)
isEmpty(LOCALBASE) {
  LOCALBASE             = /usr/local
}

# Addon software goes into /usr/local on FreeBSD, by default we will look there
QMAKE_INCDIR_POST       = $$LOCALBASE/include
QMAKE_LIBDIR_POST       = $$LOCALBASE/lib

include(../common/gcc-base-unix.conf)
include(../common/g++-unix.conf)

# System provided X11 defaults to X11R6 path on OpenBSD
X11BASE                 = $$(X11BASE)
isEmpty(X11BASE) {
  X11BASE               = /usr/X11R6
}
QMAKE_INCDIR_X11        = $$X11BASE/include
QMAKE_LIBDIR_X11        = $$X11BASE/lib
QMAKE_INCDIR_OPENGL     = $$X11BASE/include
QMAKE_LIBDIR_OPENGL     = $$X11BASE/lib

QMAKE_RPATHDIR         += $$QMAKE_LIBDIR_X11

QMAKE_OPENBSD_SHLIB	= 1

# Reset g++-unix.conf's NOUNDEF flags as OpenBSD libc can't handle environ
QMAKE_LFLAGS_NOUNDEF    =
QMAKE_LFLAGS_SONAME	=
QMAKE_LFLAGS_NEW_DTAGS  =

load(qt_config)
