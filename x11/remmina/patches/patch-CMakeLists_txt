- netinet/tcp.h needs sys/types.h
- Disable wayland

Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -274,7 +274,7 @@ set(CMAKE_SHARED_LINKER_FLAGS
 check_include_files(sys/socket.h HAVE_SYS_SOCKET_H)
 check_include_files(arpa/inet.h HAVE_ARPA_INET_H)
 check_include_files(netinet/in.h HAVE_NETINET_IN_H)
-check_include_files(netinet/tcp.h HAVE_NETINET_TCP_H)
+check_include_files("sys/types.h;netinet/tcp.h" HAVE_NETINET_TCP_H)
 check_include_files(termios.h HAVE_TERMIOS_H)
 check_include_files(netdb.h HAVE_NETDB_H)
 check_include_files(fcntl.h HAVE_FCNTL_H)
@@ -285,9 +285,9 @@ check_include_files(errno.h HAVE_ERRNO_H)
 include_directories(.)
 include_directories(src/include)
 
-# FreeBSD
+# FreeBSD, OpenBSD and NetBSD
 
-if(CMAKE_SYSTEM_NAME MATCHES "FreeBSD")
+if(CMAKE_SYSTEM_NAME MATCHES "FreeBSD|OpenBSD|NetBSD")
   set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "-rdynamic")
   include_directories(/usr/local/include /usr/include)
   link_directories(/usr/local/lib /usr/lib)
@@ -412,36 +412,17 @@ if(NOT GTK3_FOUND)
 endif()
 include_directories(${GTK3_INCLUDE_DIRS})
 
-pkg_check_modules(wayland-client wayland-client)
-if(wayland-client_FOUND)
-  set(GTK_LIBRARIES
-      ${GTK3_LIBRARY}
-      ${GDK3_LIBRARY}
-      ${GDKPixbuf_LIBRARY}
-      ${Pango_LIBRARY}
-      ${Cairo_LIBRARY}
-      ${GObject_LIBRARY}
-      ${GLib_LIBRARY}
-      ${GIO_LIBRARY}
-      ${Gmodule_LIBRARIES}
-      ${GMODULE_LIBRARY}
-      ${wayland-client_LIBRARIES})
-  include_directories(${wayland-client_INCLUDE_DIRS})
-  message(STATUS "Wayland library found.")
-else()
-  set(GTK_LIBRARIES
-      ${GTK3_LIBRARY}
-      ${GDK3_LIBRARY}
-      ${GDKPixbuf_LIBRARY}
-      ${Pango_LIBRARY}
-      ${Cairo_LIBRARY}
-      ${GObject_LIBRARY}
-      ${GLib_LIBRARY}
-      ${GIO_LIBRARY}
-      ${Gmodule_LIBRARIES}
-      ${GMODULE_LIBRARY})
-  message(STATUS "Wayland library not found.")
-endif()
+set(GTK_LIBRARIES
+    ${GTK3_LIBRARY}
+    ${GDK3_LIBRARY}
+    ${GDKPixbuf_LIBRARY}
+    ${Pango_LIBRARY}
+    ${Cairo_LIBRARY}
+    ${GObject_LIBRARY}
+    ${GLib_LIBRARY}
+    ${GIO_LIBRARY}
+    ${Gmodule_LIBRARIES}
+    ${GMODULE_LIBRARY})
 
 set(CMAKE_THREAD_PREFER_PTHREAD TRUE)
 find_package(Threads REQUIRED)
