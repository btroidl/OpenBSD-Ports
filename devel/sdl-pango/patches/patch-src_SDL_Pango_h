Index: src/SDL_Pango.h
--- src/SDL_Pango.h.orig
+++ src/SDL_Pango.h
@@ -47,10 +47,10 @@ typedef struct _SDLPango_Matrix {
 } SDLPango_Matrix;
 
 const SDLPango_Matrix _MATRIX_WHITE_BACK
-    = {255, 0, 0, 0,
-       255, 0, 0, 0,
-       255, 0, 0, 0,
-       255, 255, 0, 0,};
+    = {{{255, 0, 0, 0},
+       {255, 0, 0, 0},
+       {255, 0, 0, 0},
+       {255, 255, 0, 0}}};
 
 /*!
     Specifies white back and black letter.
@@ -58,40 +58,40 @@ const SDLPango_Matrix _MATRIX_WHITE_BACK
 const SDLPango_Matrix *MATRIX_WHITE_BACK = &_MATRIX_WHITE_BACK;
 
 const SDLPango_Matrix _MATRIX_BLACK_BACK
-    = {0, 255, 0, 0,
-       0, 255, 0, 0,
-       0, 255, 0, 0,
-       255, 255, 0, 0,};
+    = {{{0, 255, 0, 0},
+       {0, 255, 0, 0},
+       {0, 255, 0, 0},
+       {255, 255, 0, 0}}};
 /*!
     Specifies black back and white letter.
 */
 const SDLPango_Matrix *MATRIX_BLACK_BACK = &_MATRIX_BLACK_BACK;
 
 const SDLPango_Matrix _MATRIX_TRANSPARENT_BACK_BLACK_LETTER
-    = {0, 0, 0, 0,
-       0, 0, 0, 0,
-       0, 0, 0, 0,
-       0, 255, 0, 0,};
+    = {{{0, 0, 0, 0},
+       {0, 0, 0, 0},
+       {0, 0, 0, 0},
+       {0, 255, 0, 0}}};
 /*!
     Specifies transparent back and black letter.
 */
 const SDLPango_Matrix *MATRIX_TRANSPARENT_BACK_BLACK_LETTER = &_MATRIX_TRANSPARENT_BACK_BLACK_LETTER;
 
 const SDLPango_Matrix _MATRIX_TRANSPARENT_BACK_WHITE_LETTER
-    = {255, 255, 0, 0,
-       255, 255, 0, 0,
-       255, 255, 0, 0,
-       0, 255, 0, 0,};
+    = {{{255, 255, 0, 0},
+       {255, 255, 0, 0},
+       {255, 255, 0, 0},
+       {0, 255, 0, 0}}};
 /*!
     Specifies transparent back and white letter.
 */
 const SDLPango_Matrix *MATRIX_TRANSPARENT_BACK_WHITE_LETTER = &_MATRIX_TRANSPARENT_BACK_WHITE_LETTER;
 
 const SDLPango_Matrix _MATRIX_TRANSPARENT_BACK_TRANSPARENT_LETTER
-    = {255, 255, 0, 0,
-       255, 255, 0, 0,
-       255, 255, 0, 0,
-       0, 0, 0, 0,};
+    = {{{255, 255, 0, 0},
+       {255, 255, 0, 0},
+       {255, 255, 0, 0},
+       {0, 0, 0, 0}}};
 /*!
     Specifies transparent back and transparent letter.
     This is useful for KARAOKE like rendering.
@@ -109,12 +109,20 @@ typedef enum {
     SDLPANGO_DIRECTION_NEUTRAL	/*! Neutral */
 } SDLPango_Direction;
 
+/*!
+    Specifies alignment of text. See Pango reference for detail
+*/
+typedef enum {
+    SDLPANGO_ALIGN_LEFT,
+    SDLPANGO_ALIGN_CENTER,
+    SDLPANGO_ALIGN_RIGHT
+} SDLPango_Alignment;
 
-
 extern DECLSPEC int SDLCALL SDLPango_Init();
 
 extern DECLSPEC int SDLCALL SDLPango_WasInit();
 
+extern DECLSPEC SDLPango_Context* SDLCALL SDLPango_CreateContext_GivenFontDesc(const char* font_desc);
 extern DECLSPEC SDLPango_Context* SDLCALL SDLPango_CreateContext();
 
 extern DECLSPEC void SDLCALL SDLPango_FreeContext(
@@ -157,6 +165,12 @@ extern DECLSPEC void SDLCALL SDLPango_SetMarkup(
     const char *markup,
     int length);
 
+extern DECLSPEC void SDLCALL SDLPango_SetText_GivenAlignment(
+    SDLPango_Context *context,
+    const char *text,
+    int length,
+    SDLPango_Alignment alignment);
+
 extern DECLSPEC void SDLCALL SDLPango_SetText(
     SDLPango_Context *context,
     const char *markup,
@@ -170,17 +184,15 @@ extern DECLSPEC void SDLCALL SDLPango_SetBaseDirection
     SDLPango_Context *context,
     SDLPango_Direction direction);
 
+#ifdef FT2BUILD_H_
 
-#ifdef __FT2_BUILD_UNIX_H__
-
 extern DECLSPEC void SDLCALL SDLPango_CopyFTBitmapToSurface(
     const FT_Bitmap *bitmap,
     SDL_Surface *surface,
     const SDLPango_Matrix *matrix,
     SDL_Rect *rect);
 
-#endif	/* __FT2_BUILD_UNIX_H__ */
-
+#endif /* FT2BUILD_H_ */
 
 #ifdef __PANGO_H__
 
