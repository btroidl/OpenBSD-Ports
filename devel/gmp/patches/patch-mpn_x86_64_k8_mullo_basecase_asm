Index: mpn/x86_64/k8/mullo_basecase.asm
--- mpn/x86_64/k8/mullo_basecase.asm.orig
+++ mpn/x86_64/k8/mullo_basecase.asm
@@ -99,12 +99,14 @@ dnl	JMPENT(	L(2m4), L(tab))			C 10
 dnl	JMPENT(	L(3m4), L(tab))			C 11
 	TEXT
 
-L(1):	imul	%r8, %rax
+L(1):	endbr64
+	imul	%r8, %rax
 	mov	%rax, (rp)
 	FUNC_EXIT()
 	ret
 
-L(2):	mov	8(vp_param), %r11
+L(2):	endbr64
+	mov	8(vp_param), %r11
 	imul	%rax, %r11		C u0 x v1
 	mul	%r8			C u0 x v0
 	mov	%rax, (rp)
@@ -115,7 +117,8 @@ L(2):	mov	8(vp_param), %r11
 	FUNC_EXIT()
 	ret
 
-L(3):	mov	8(vp_param), %r9	C v1
+L(3):	endbr64
+	mov	8(vp_param), %r9	C v1
 	mov	16(vp_param), %r11
 	mul	%r8			C u0 x v0 -> <r1,r0>
 	mov	%rax, (rp)		C r0
@@ -335,6 +338,7 @@ L(mul_2_entry_1):
 
 
 L(addmul_outer_1):
+	endbr64
 	lea	-2(n), j
 	mov	-16(up,n,8), %rax
 	mul	v0
@@ -346,6 +350,7 @@ L(addmul_outer_1):
 	jmp	L(addmul_entry_1)
 
 L(addmul_outer_3):
+	endbr64
 	lea	0(n), j
 	mov	-16(up,n,8), %rax
 	xor	R32(w3), R32(w3)
