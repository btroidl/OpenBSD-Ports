Don't forcefully enable RISC-V 'V'ector support, version 1.0 is neither
supported by clang 13 nor by our kernel.

Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -241,8 +241,8 @@ else()
       # Not yet supported by GCC. When runtime dispatch is supported and
       # implemented, we will remove v from the required flags. Until then, using
       # clang for RISC-V will require the CPU to support the V extension (1.0).
-      list(APPEND HWY_FLAGS -march=rv64gcv1p0)
-      list(APPEND HWY_FLAGS -menable-experimental-extensions)
+      #list(APPEND HWY_FLAGS -march=rv64gcv1p0)
+      #list(APPEND HWY_FLAGS -menable-experimental-extensions)
     endif()
   endif()
 
