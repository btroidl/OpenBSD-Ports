https://chromium-review.googlesource.com/c/v8/v8/+/4637222/11..12/src/regexp/x64/regexp-macro-assembler-x64.cc
Index: modcargo-crates/v8-0.74.3/v8/src/regexp/x64/regexp-macro-assembler-x64.cc
--- modcargo-crates/v8-0.74.3/v8/src/regexp/x64/regexp-macro-assembler-x64.cc.orig
+++ modcargo-crates/v8-0.74.3/v8/src/regexp/x64/regexp-macro-assembler-x64.cc
@@ -110,6 +110,7 @@ RegExpMacroAssemblerX64::RegExpMacroAssemblerX64(Isola
       backtrack_label_(),
       exit_label_() {
   DCHECK_EQ(0, registers_to_save % 2);
+  __ CodeEntry();
   __ jmp(&entry_label_);   // We'll write the entry code when we know more.
   __ bind(&start_label_);  // And then continue from here.
 }
@@ -170,7 +171,7 @@ void RegExpMacroAssemblerX64::Backtrack() {
   // and jump to location.
   Pop(rbx);
   __ addq(rbx, code_object_pointer());
-  __ jmp(rbx);
+  __ jmp(rbx, /*notrack=*/true);
 }
 
 
@@ -714,6 +715,10 @@ bool RegExpMacroAssemblerX64::CheckSpecialClassRanges(
       // Match any character.
       return true;
   }
+}
+
+void RegExpMacroAssemblerX64::BindJumpTarget(Label* label) {
+  Bind(label);
 }
 
 void RegExpMacroAssemblerX64::Fail() {
