Raise size of socket buffer for UDS sockets, which are used for (at
least) comms with squid-coordinator.ipc. Avoids errors like "FD 14
write failure: (40) Message too long." when SMP workers are used.

Index: src/comm.cc
--- src/comm.cc.orig
+++ src/comm.cc
@@ -1717,6 +1717,8 @@ comm_open_uds(int sock_type,
     // TODO: merge with comm_openex() when Ip::Address becomes NetAddress
 
     int new_socket;
+    int xerrno;
+    int buflen = 16384;
 
     /* Create socket for accepting new connections. */
     ++ statCounter.syscalls.sock.sockets;
@@ -1747,6 +1749,20 @@ comm_open_uds(int sock_type,
             debugs(50, DBG_CRITICAL, MYNAME << "socket failure: " << xstrerr(xerrno));
         }
         return -1;
+    }
+
+    if(sock_type == IPC_UDP_SOCKET) {
+         errno = 0;
+         if (setsockopt(new_socket, SOL_SOCKET, SO_SNDBUF, (void *) &buflen, sizeof(buflen)) == -1)  {
+             xerrno = errno;
+             debugs(50, DBG_IMPORTANT, "ERROR: setsockopt failed: " << xstrerr(xerrno));
+             errno = 0;
+         }
+         if (setsockopt(new_socket, SOL_SOCKET, SO_RCVBUF, (void *) &buflen, sizeof(buflen)) == -1) {
+             xerrno = errno;
+             debugs(50, DBG_IMPORTANT, "ERROR: setsockopt failed: " << xstrerr(xerrno));
+             errno = 0;
+         }
     }
 
     debugs(50, 3, "Opened UDS FD " << new_socket << " : family=" << AI.ai_family << ", type=" << AI.ai_socktype << ", protocol=" << AI.ai_protocol);
