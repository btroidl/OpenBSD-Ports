Index: crypto/fipsmodule/rand/urandom.c
--- crypto/fipsmodule/rand/urandom.c.orig
+++ crypto/fipsmodule/rand/urandom.c
@@ -68,6 +68,12 @@
 #include <sys/random.h>
 #endif
 
+#if defined(OPENSSL_OPENBSD)
+// getentropy exists in any supported version of OpenBSD
+#define OPENBSD_GETENTROPY
+#include <unistd.h>
+#endif
+
 #include <openssl/thread.h>
 #include <openssl/mem.h>
 
@@ -300,6 +306,11 @@ static int fill_with_entropy(uint8_t *out, size_t len,
       r = boringssl_getrandom(out, len, getrandom_flags);
 #elif defined(FREEBSD_GETRANDOM)
       r = getrandom(out, len, getrandom_flags);
+#elif defined(OPENBSD_GETENTROPY)
+      {
+        size_t todo = len <= 256 ? len : 256;
+        return getentropy(out, todo) != 0 ? -1 : (ssize_t)todo;
+      }
 #elif defined(OPENSSL_MACOS)
       if (__builtin_available(macos 10.12, *)) {
         // |getentropy| can only request 256 bytes at a time.
