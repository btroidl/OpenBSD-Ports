Index: pregenerated/aesni-x86_64-elf.S
--- pregenerated/aesni-x86_64-elf.S.orig
+++ pregenerated/aesni-x86_64-elf.S
@@ -1,6 +1,12 @@
 # This file is generated from a similarly-named Perl script in the BoringSSL
 # source tree. Do not edit by hand.
 
+#if defined(__CET__)
+#include <cet.h>
+#else
+#define _CET_ENDBR
+#endif
+
 #if defined(__has_feature)
 #if __has_feature(memory_sanitizer) && !defined(OPENSSL_NO_ASM)
 #define OPENSSL_NO_ASM
@@ -17,6 +23,7 @@
 .align	16
 GFp_aes_hw_encrypt:
 .cfi_startproc	
+	_CET_ENDBR
 	movups	(%rdi),%xmm2
 	movl	240(%rdx),%eax
 	movups	(%rdx),%xmm0
@@ -274,6 +281,7 @@ _aesni_encrypt8:
 .align	16
 GFp_aes_hw_ctr32_encrypt_blocks:
 .cfi_startproc	
+	_CET_ENDBR
 	cmpq	$1,%rdx
 	jne	.Lctr32_bulk
 
@@ -856,6 +864,7 @@ GFp_aes_hw_ctr32_encrypt_blocks:
 GFp_aes_hw_set_encrypt_key:
 __aesni_set_encrypt_key:
 .cfi_startproc	
+	_CET_ENDBR
 .byte	0x48,0x83,0xEC,0x08
 .cfi_adjust_cfa_offset	8
 	movq	$-1,%rax
@@ -1157,6 +1166,7 @@ __aesni_set_encrypt_key:
 	.byte	0xf3,0xc3
 .size	GFp_aes_hw_set_encrypt_key,.-GFp_aes_hw_set_encrypt_key
 .size	__aesni_set_encrypt_key,.-__aesni_set_encrypt_key
+.section .rodata
 .align	64
 .Lbswap_mask:
 .byte	15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
@@ -1177,5 +1187,6 @@ __aesni_set_encrypt_key:
 
 .byte	65,69,83,32,102,111,114,32,73,110,116,101,108,32,65,69,83,45,78,73,44,32,67,82,89,80,84,79,71,65,77,83,32,98,121,32,60,97,112,112,114,111,64,111,112,101,110,115,115,108,46,111,114,103,62,0
 .align	64
+.text
 #endif
 .section	.note.GNU-stack,"",@progbits
