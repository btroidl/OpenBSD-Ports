Revert upstream commit 347519a4d8f3befb719f11eeb0121c736ce64dee,
which breaks keyboard input.

Index: input/drivers/x11_input.c
--- input/drivers/x11_input.c.orig
+++ input/drivers/x11_input.c
@@ -76,7 +76,7 @@ static void *x_input_init(const char *joypad_driver)
 
 static bool x_keyboard_pressed(x11_input_t *x11, unsigned key)
 {
-   int keycode = rarch_keysym_lut[(enum retro_key)key];
+   int keycode = XKeysymToKeycode(x11->display, rarch_keysym_lut[(enum retro_key)key]);
    return x11->state[keycode >> 3] & (1 << (keycode & 7));
 }
 
@@ -228,6 +228,8 @@ static int16_t x_input_state(
             int16_t ret           = 0;
             bool id_plus_valid    = false;
             bool id_minus_valid   = false;
+            unsigned sym          = 0;
+            int keycode           = 0;
 
             input_conv_analog_id_to_bind_id(idx, id, id_minus, id_plus);
 
@@ -238,13 +240,15 @@ static int16_t x_input_state(
 
             if (id_plus_valid && id_plus_key < RETROK_LAST)
             {
-               unsigned sym = rarch_keysym_lut[(enum retro_key)id_plus_key];
+               sym = rarch_keysym_lut[(enum retro_key)id_plus_key];
+               keycode = XKeysymToKeycode(x11->display, sym);
                if (x11->state[sym >> 3] & (1 << (sym & 7)))
                   ret = 0x7fff;
             }
             if (id_minus_valid && id_minus_key < RETROK_LAST)
             {
-               unsigned sym = rarch_keysym_lut[(enum retro_key)id_minus_key];
+               sym = rarch_keysym_lut[(enum retro_key)id_minus_key];
+               keycode = XKeysymToKeycode(x11->display, sym);
                if (x11->state[sym >> 3] & (1 << (sym & 7)))
                   ret += -0x7fff;
             }
