avoid console spamming

Index: src/resource.cpp
--- src/resource.cpp.orig
+++ src/resource.cpp
@@ -1456,12 +1456,10 @@ Translation Translation::From(const std::string &poDat
 const std::string &Translation::Translate(const TranslationKey &key) {
     auto it = messages.find(key);
     if(it == messages.end()) {
-        dbp("Missing (absent) translation for %s'%s'", key.context.c_str(), key.ident.c_str());
         messages[key].emplace_back(key.ident);
         it = messages.find(key);
     }
     if(it->second[0].empty()) {
-        dbp("Missing (empty) translation for %s'%s'", key.context.c_str(), key.ident.c_str());
         it->second[0] = key.ident;
     }
     if(it->second.size() != 1) {
@@ -1476,15 +1474,12 @@ const std::string &Translation::TranslatePlural(const

     auto it = messages.find(key);
     if(it == messages.end()) {
-        dbp("Missing (absent) translation for %s'%s'", key.context.c_str(), key.ident.c_str());
         for(unsigned i = 0; i < pluralCount; i++) {
             messages[key].emplace_back(key.ident);
         }
         it = messages.find(key);
     }
     if(it->second[pluralForm].empty()) {
-        dbp("Missing (empty) translation for %s'%s'[%d]",
-            key.context.c_str(), key.ident.c_str(), pluralForm);
         it->second[pluralForm] = key.ident;
     }
     return it->second[pluralForm];
